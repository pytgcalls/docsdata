<page>
    <h1>Callbacks</h1>
    <text>
        Callbacks allows you to define custom behavior or actions that should be triggered in response to specific
        events or conditions within your application.
        These events could include call-related occurrences, state changes, or other interactions with the NTgCalls library.
    </text>
    <config id="NOTE_CALLBACK"/>
    <br/>
    <category>
        <category-title><ref src="method">NTgCalls.<sb>on_stream_end</sb></ref>()</category-title>
        <subtext>
            <config id="CALLBACK_END_DESC"/>
            <h3>Example</h3>
            <syntax-highlight mark="4-7">
                ...
                app = NTgCalls()
                ...
                def handler(chat_id: int, update: StreamType):
                    print(chat_id, update)
                    ...
                app.on_stream_end(handler)
            </syntax-highlight>
        </subtext>
    </category>
    <br/><br/>
    <category>
        <category-title><ref src="method">NTgCalls.<sb>on_upgrade</sb></ref>()</category-title>
        <subtext>
            <config id="CALLBACK_UPGRADE_DESC"/>
            <h3>Example</h3>
            <syntax-highlight mark="4-7">
                ...
                app = NTgCalls()
                ...
                def handler(chat_id: int, update: MediaState):
                    print(chat_id, update)
                    ...
                app.on_upgrade(handler)
            </syntax-highlight>
        </subtext>
    </category>
    <br/><br/>
    <category>
        <category-title><ref src="method">NTgCalls.<sb>on_connection_change</sb></ref>()</category-title>
        <subtext>
            <config id="CALLBACK_CONN_CHANGE_DESC"/>
            <h3>Example</h3>
            <syntax-highlight mark="4-7">
                ...
                app = NTgCalls()
                ...
                def handler(chat_id: int, state: ConnectionState):
                    print(chat_id, state)
                    ...
                app.on_connection_change(handler)
            </syntax-highlight>
        </subtext>
    </category>
    <br/><br/>
    <category>
        <category-title><ref src="method">NTgCalls.<sb>on_signaling</sb></ref>()</category-title>
        <subtext>
            <config id="CALLBACK_SIGNALING_DESC"/>
            <h3>Example</h3>
            <syntax-highlight mark="4-7">
                ...
                app = NTgCalls()
                ...
                def handler(chat_id: int, payload: bytes):
                    print(chat_id, payload)
                ...
                app.on_signaling(handler)
            </syntax-highlight>
        </subtext>
    </category>
    <br/><br/>
    <category>
        <category-title><ref src="method">NTgCalls.<sb>on_frames</sb></ref>()</category-title>
        <subtext>
            <config id="CALLBACK_FRAMES_DESC"/>
            <h3>Example</h3>
            <syntax-highlight mark="4-7">
                ...
                app = NTgCalls()
                ...
                def handler(chat_id: int, mode: StreamMode, device: StreamDevice, frames: List[Frame]):
                    print(chat_id, mode, device, frames)
                    ...
                app.on_frames(handler)
            </syntax-highlight>
        </subtext>
    </category>
    <br/><br/>
    <category>
        <category-title><ref src="method">NTgCalls.<sb>on_remote_source_change</sb></ref>()</category-title>
        <subtext>
            <config id="CALLBACK_REMOTE_SOURCE_DESC"/>
            <h3>Example</h3>
            <syntax-highlight mark="4-7">
                ...
                app = NTgCalls()
                ...
                def handler(chat_id: int, source: RemoteSource):
                    print(chat_id, source)
                    ...
                app.on_remote_source_change(handler)
            </syntax-highlight>
        </subtext>
    </category>
    <br/><br/>
    <category>
        <category-title><ref src="method">NTgCalls.<sb>on_request_broadcast_part</sb></ref>()</category-title>
        <subtext>
            <config id="CALLBACK_REQUEST_BROADCAST_PART_DESC"/>
            <h3>Example</h3>
            <syntax-highlight mark="4-7">
                ...
                app = NTgCalls()
                ...
                def handler(chat_id: int, request: SegmentPartRequest):
                    print(chat_id, request)
                    ...
                app.on_request_broadcast_part(handler)
            </syntax-highlight>
        </subtext>
    </category>
    <br/><br/>
    <category>
        <category-title><ref src="method">NTgCalls.<sb>on_request_broadcast_timestamp</sb></ref>()</category-title>
        <subtext>
            <config id="CALLBACK_REQUEST_BROADCAST_TIME_DESC"/>
            <h3>Example</h3>
            <syntax-highlight mark="4-7">
                ...
                app = NTgCalls()
                ...
                def handler(chat_id: int):
                    print(chat_id)
                    ...
                app.on_request_broadcast_timestamp(handler)
            </syntax-highlight>
        </subtext>
    </category>
</page>