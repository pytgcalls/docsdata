<page>
    <h1>PyTgCalls Client</h1>
    <text>
        You now are in the API Reference section. Here you can find detailed information about PyTgCalls API:
        the main Client class, all available methods, types, attributes and decorators detailed descriptions can be found starting from this page.

        This page is about the Client class, which exposes high-level methods for easy access to the API.
    </text>
    <h3>Example</h3>
    <syntax-highlight mark="1-3">
        from pytgcalls import PyTgCalls

        app = PyTgCalls(client)
        app.start()
    </syntax-highlight>
    <separator/>
    <h2>Details</h2>
    <category>
        <category-title noref="true">
            <shi>class</shi> <ref src="class">pytgcalls.<sb>PyTgCalls</sb></ref>
        </category-title>
        <subtext>
            <text>PyTgCalls Client, the main tool for interacting with Telegram Calls.</text>
            <br/>
            <category>
                <pg-title>PARAMETERS</pg-title>
                <subtext>
                    <category-title><ref>app</ref>: Union[<a href="https://docs.pyrogram.org/api/client">pyrogram.Client</a>, <a href="https://docs.telethon.dev/en/latest/modules/client.html">telethon.TelegramClient</a>, <a href="https://hydrogram.amanoteam.com/en/latest/api/client.html">hydrogram.Client</a>]</category-title>
                    <subtext><text>Pass the MTProto Client</text></subtext>
                    <category-title><ref>cache_duration</ref>: <shi>int</shi></category-title>
                    <subtext><text>Cache duration of a Full Chat query</text></subtext>
                </subtext>
            </category>
            <br/>
            <category>
                <pg-title>STATIC METHODS</pg-title>
                <subtext>
                    <category-title><shi>async</shi> <ref><sb>calls</sb></ref> <shi>-> dict</shi>[<shi>str</shi>, <docs-ref link="/PyTgCalls/Advanced Types/Call">Call</docs-ref>]</category-title>
                    <config id="LIST_CALLS_DESC"/>

                    <category-title><shi>async</shi> <ref><sb>group_calls</sb></ref> <shi>-> dict</shi>[<shi>str</shi>, <docs-ref link="/PyTgCalls/Advanced Types/Call">Call</docs-ref>]</category-title>
                    <subtext><text>Get all group calls</text></subtext>

                    <category-title><shi>async</shi> <ref><sb>private_calls</sb></ref> <shi>-> dict</shi>[<shi>str</shi>, <docs-ref link="/PyTgCalls/Advanced Types/Call">Call</docs-ref>]</category-title>
                    <subtext><text>Get all private calls</text></subtext>

                    <category-title><ref><sb>cache_peer</sb></ref> <shi>-></shi> <config id="ARG_UNION_PEER"/></category-title>
                    <subtext><text>Get current Telegram user</text></subtext>

                    <category-title><ref><sb>ping</sb></ref> <shi>-></shi> <shi>int</shi></category-title>
                    <subtext><text>Ping of NTgCalls core</text></subtext>

                    <category-title><shi>async</shi> <ref><sb>cpu_usage</sb></ref> <shi>-> float</shi></category-title>
                    <subtext><text>Get the CPU usage of the current process</text></subtext>
                </subtext>
            </category>
            <br/>
            <category>
                <pg-title>RAISES</pg-title>
                <subtext>
                    <category-title>exception <ref>pytgcalls.exceptions.<sb>InvalidMTProtoClient</sb></ref></category-title>
                    <subtext><text>You set an invalid MTProto client.</text></subtext>
                </subtext>
            </category>
        </subtext>

    </category>
</page>